# Seminar5
# Задача №31. Решение в группах
# Последовательностью Фибоначчи называется
# последовательность чисел a0=0,a1=1,ak=ak-1+ak-2(k>1)
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию
#(Программа на вход должна принять индекс из ряда Фибоначи и вернуть элемент-число с этим индексом)

# def fib(n):
#     if n <= 1:
#         return 1
#     return fib(n-1) + fib(n-2)
# number = int(input("Введите число n: "))
# print(fib(number))

#вариант когда индексация с 0
# def fib(n):
#     if n == 1:
#         return 1
#     elif n == 0:
#         return 0
#     return fib(n - 1) + fib(n - 2)

# Задача №33. Решение в группах
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# def change_rating(input_list):# ф-ия принимает на вход список
#     max = max(input_list)
#     minn = min(input_list)
#     for i in range(len(input_list)):
#         if input_list[i] == maxx :
#             input_list[i] = minn

#     return input_list

# print(change_rating([1, 2, 2, 4]))

# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes
# def prostoe_proverka(num):
#     if num in (1, 0):
#         return False
#     for i in range(2,(num//2) + 1):
#         if (num%i ==0):
#             return False
#     return True
# N = int(input("Введите число: "))
# print(prostoe_proverka(N))

# Задача №37. Решение в группах
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3
# def rev_input(n):# базовый случай запросить число и вернуть его если не базовый случай 
#     # тоже запросить число поставить его в конец а в начале запустить запрос
#     num = input()
#     if n == 1:
#         return num
#     return rev_input(n - 1) + ' ' + num
# print(rev_input(4))
